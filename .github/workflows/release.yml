name: Release

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'
      - 'CHANGELOG.md'
      - '*.md'

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  release:
    runs-on: ubuntu-latest
    concurrency: release
    outputs:
      version: ${{ steps.semantic.outputs.version }}
      tag: ${{ steps.semantic.outputs.tag }}
      published: ${{ steps.semantic.outputs.published }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install semantic-release
        run: |
          npm install -g semantic-release@latest
          npm install -g @semantic-release/changelog@latest
          npm install -g @semantic-release/git@latest
          npm install -g @semantic-release/exec@latest

      - name: Configure git
        run: |
          git config user.name "semantic-release[bot]"
          git config user.email "semantic-release[bot]@users.noreply.github.com"

      - name: Run semantic release
        id: semantic
        run: |
          # Run semantic-release
          npx semantic-release --dry-run=false

          # Check if a release was created
          if git describe --tags --exact-match HEAD 2>/dev/null; then
            TAG=$(git describe --tags --exact-match HEAD)
            VERSION=$(echo "$TAG" | sed 's/^v//')
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "tag=$TAG" >> $GITHUB_OUTPUT
            echo "published=true" >> $GITHUB_OUTPUT
            echo "✅ Release created: $TAG (v$VERSION)"
          else
            echo "version=" >> $GITHUB_OUTPUT
            echo "tag=" >> $GITHUB_OUTPUT
            echo "published=false" >> $GITHUB_OUTPUT
            echo "ℹ️  No release needed - no version changes detected"
          fi
        env:
          GH_TOKEN: ${{ secrets.RELEASE_TOKEN }}

  build-windows:
    needs: release
    if: needs.release.outputs.published == 'true'
    runs-on: windows-latest
    name: Build Windows Executable

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.release.outputs.tag }}

      - name: Build Windows executable
        uses: ./.github/actions/build-executable
        with:
          python-version: '3.11'
          platform: 'windows'
          executable-name: 'auto-accept'
          artifact-name: 'auto-accept-windows'
          output-path: 'dist/auto-accept.exe'

  build-macos:
    needs: release
    if: needs.release.outputs.published == 'true'
    runs-on: macos-latest
    name: Build macOS Executable

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.release.outputs.tag }}

      - name: Build macOS executable
        uses: ./.github/actions/build-executable
        with:
          python-version: '3.11'
          platform: 'macos'
          executable-name: 'auto-accept'
          artifact-name: 'auto-accept-macos'
          output-path: 'dist/auto-accept'

  upload-artifacts:
    needs: [release, build-windows, build-macos]
    if: needs.release.outputs.published == 'true'
    runs-on: ubuntu-latest
    name: Upload Artifacts to Release

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: auto-accept-windows
          path: artifacts-windows

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: auto-accept-macos
          path: artifacts-macos

      - name: Create checksums
        run: |
          mkdir -p checksums
          sha256sum artifacts-windows/auto-accept.exe > checksums/auto-accept-windows.exe.sha256
          sha256sum artifacts-macos/auto-accept > checksums/auto-accept-macos.sha256
          echo "Checksums created:"
          cat checksums/*

      - name: Upload artifacts to release
        run: |
          gh release upload ${{ needs.release.outputs.tag }} \
            artifacts-windows/auto-accept.exe \
            checksums/auto-accept-windows.exe.sha256 \
            artifacts-macos/auto-accept \
            checksums/auto-accept-macos.sha256 \
            --clobber
        env:
          GH_TOKEN: ${{ secrets.RELEASE_TOKEN }}
